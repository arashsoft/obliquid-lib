= org.obliquid.helpers = 

org.obliquid.helpers are Java helper classes released with LGPL3 licence.
They are my personal code library that I've used in multiple projects.
Maven is used to pull dependencies and build the project. All classes are not
meant to be comprehensive, but they contain what I need,
[http://en.wikipedia.org/wiki/You_ain%27t_gonna_need_it YAGNI] style.

The following classes are committed to date:

=== org.obliquid.helpers package ===

;ArrayHelper
: Helper Class for Arrays and Collections: buil HashMap from two arrys, build an ArrayList from one or two Arrays
;BdHelper
: Make it easier to do some operations with BigDecimals
;ByteArrayHelper
: Analyze and manipulate byte arrays: search, replace, toArray (from List)
;CurrencyHelper
: Format currency according to the current Locale
;DateHelper
: Helper Class for Dates, both Java Dates and Joda Dates.
;ExecHelper
: Run system commands, provides an exec function that returns an exit value
;FileHelper
: File management class: mkdir, rm, rmdir, touch, readFileToByteArray, writeByteArrayToFile
;HtaccessHelper
: Analyze Apache .htaccess files: listAuthorizedAddresses(), buildAllowFrom()
;RecursiveDump
: Recursive Dump of Collections & Arrays
;SqlFileReader
: Provides a statement Iterator interface to SQL files
;SqlHelper
: SQL related utils: build a prepared statement, methods to close a ResultSet or Statement checking for null and Exceptions, methods to extract values from a ResultSet including blobs.
;StopWatch 
: Simple Stop Watch with seconds and milliseconds timings and sleep functions wrapped to ignore exceptions.
;StringHelper
: Utility functions for String: SHA1, MD5, random string, ellipsis, escape, implode, quote, repeat, substr, truncate, ucFirst, zeroPad
;WebClient
: Return info about the Web Client: getIpAddress()

----

=== org.obliquid.config package ===

;AppConfig
: Application configuration, allows to keep different configuration for different servers in the same codebase, so I can publish over and over without worrying about messing the configurations.

----

=== org.obliquid.db package ===

;DbNull
: Represent a NULL value in a database field, and holds the type from java.sql.Types
;MetaDb
: Manage interactions with DB
;HasDb
: Base class for Objects needing a DB connection


== Maven Quick Start ==

This project uses Maven, if you know it already you can stop reading now. Otherwise read the [http://maven.apache.org/guides/getting-started/index.html Maven Getting Started Guide].  Supposing that Maven is already installed on your system, here are some useful commands:

'''mvn compile''' downloads dependencies and compiles the project, classes are generated in
target/classes directory.

'''mvn test''' runs the test suite, thus running all tests

'''mvn clean''' deletes the target/ directory with all generated artifacts

'''mvn package''' generates a jar file in the target/ directory

'''mvn javadoc:javadoc''' generates the Javadoc files in target/site/apidocs/

'''mvn eclipse:eclipse''' generates or updates eclipse project files, run this command every time a new dependency is added to pom.xml - I've blogged in more details about [http://www.stefanolocati.it/blog/?p=917 external dependencies]

'''mvn eclipse:eclipse -DdownloadSources=true  -DdownloadJavadocs=true''' to download also Javadocs and Sources


